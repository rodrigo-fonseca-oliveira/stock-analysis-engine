{{- if .Values.s3_minio }}
{{- if .Values.s3_minio.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.s3_minio.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "${AWS_ACCESS_KEY_ID}" | base64
  # trexaccesskey
  accessKey: {{ .Values.s3_minio.accessKey | b64enc | quote }}
  # minio does not use camelcase
  accesskey: {{ .Values.s3_minio.accessKey | b64enc | quote }}
  # echo -n "${AWS_SECRET_ACCESS_KEY}" | base64
  # trex123321
  secretKey: {{ .Values.s3_minio.secretKey | b64enc | quote }}
  # minio does not use camelcase
  secretkey: {{ .Values.s3_minio.secretKey | b64enc | quote }}
  # echo -n "minio-service:9000" | base64
  address: {{ .Values.s3_minio.address | b64enc | quote }}
  region: {{ .Values.s3_minio.region | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.s3_aws }}
{{- if .Values.s3_aws.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.s3_aws.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "${AWS_ACCESS_KEY_ID}" | base64
  accessKey: {{ .Values.s3_aws.accessKey | b64enc | quote }}
  # echo -n "${AWS_SECRET_ACCESS_KEY}" | base64
  secretKey: {{ .Values.s3_aws.secretKey | b64enc | quote }}
  # echo -n "s3.us-east-1.amazonaws.com" | base64
  address: {{ .Values.s3_aws.address | b64enc | quote }}
  region: {{ .Values.s3_aws.region | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.registry }}
{{- if .Values.registry.addToSecrets }}
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: {{ .Values.registry.imagePullSecrets }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  # kubectl create secret docker-registry ae.docker.creds --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-password> --docker-email=<your-email>
  address: {{ .Values.registry.address | b64enc | quote }}
  .dockerconfigjson: {{ .Values.registry.dockerConfigJSON | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.iex }}
{{- if .Values.iex.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.iex.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "${IEX_TOKEN}" | base64
  token: {{ .Values.iex.token | b64enc | quote }}
  # echo -n "${IEX_SECRET_TOKEN}" | base64
  secretToken: {{ .Values.iex.secretToken | b64enc | quote }}
  # echo -n "beta" | base64
  apiVersion: {{ .Values.iex.apiVersion | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.tradier }}
{{- if .Values.tradier.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.tradier.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "api.tradier.com" | base64
  apiFQDN: {{ .Values.tradier.apiFQDN | b64enc | quote }}
  # echo -n "sandbox.tradier.com" | base64
  endpointFQDN: {{ .Values.tradier.dataFQDN | b64enc | quote }}
  # echo -n "sandbox.tradier.com" | base64
  streamFQDN: {{ .Values.tradier.streamFQDN | b64enc | quote }}
  # echo -n "${TD_TOKEN}" | base64
  token: {{ .Values.tradier.token | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.slack }}
{{- if .Values.slack.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.slack.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "${SLACK_WEBHOOK}" | base64
  webhook: {{ .Values.slack.webhook | b64enc | quote }}
  # echo -n "${SLACK_ACCESS_TOKEN}" | base64
  token: {{ .Values.slack.token | b64enc | quote }}
  # echo -n "${SLACK_PUBLISH_PLOT_CHANNELS}" | base64
  channels: {{ .Values.slack.channels | b64enc | quote }}
  # echo -n "${PROD_SLACK_ALERTS}" | base64
  prodAlerts: {{ .Values.slack.prodAlerts | b64enc | quote }}
  # echo -n "${DATASET_COLLECTION_SLACK_ALERTS}" | base64
  dataAlerts: {{ .Values.slack.dataAlerts | b64enc | quote }}
---
{{- end }}
{{- end }}
{{- if .Values.redis }}
{{- if .Values.redis.addToSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.redis.secretName }}
  labels:
    app: {{ template "ae-backup.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  # echo -n "${REDIS_ADDRESS}" | base64
  address: {{ .Values.redis.address | b64enc | quote }}
---
{{- end }}
{{- end }}
