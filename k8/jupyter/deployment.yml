apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ae-jupyter
  annotations:
    description: The Stock Analysis Jupyter Application
    runtime: python3
  labels:
    sa: jupyter
    purpose: stock-analysis
    layer: backend
    messaging: redis
    cache: redis
    pubsub: publisher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ae-jupyter
      backend: enabled
  template:
    metadata:
      labels:
        app: ae-jupyter
        backend: enabled
        purpose: stock-analysis
        layer: backend
        messaging: redis
        cache: redis
        pubsub: publisher
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: backend
                operator: In
                values:
                - enabled
      hostname: ae-jupyter
      restartPolicy: Always
      containers:
      - image: jayjohnson/stock-analysis-jupyter:latest
        imagePullPolicy: Always
        name: ae-jupyter
        resources: {}
        command:
        - /bin/bash
        - -c
        - cd /opt/sa/ &&
          . /opt/venv/bin/activate &&
          /opt/sa/docker/jupyter/start-container.sh
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: api.db
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api.db
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: api.db
              key: dbname
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-s3-access
              key: access_key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-s3-access
              key: secret_key
        - name: S3_ADDRESS
          value: minio-service:9000
        - name: S3_REGION_NAME
          value: us-east-1
        # Uses ae-backtester pods
        # /opt/sa/k8/engine/backtester.yml
        - name: WORKER_BROKER_URL
          value: redis://redis-master:6379/11
        - name: WORKER_BACKEND_URL
          value: redis://redis-master:6379/12
        - name: REDIS_ADDRESS
          value: redis-master:6379
        - name: REDIS_DB
          value: "0"
        # logging to the notebook can make them hard to read
        # this will only log errors
        - name: SHARED_LOG_CFG
          value: /opt/sa/analysis_engine/log/error-logging.json
        # set to your Slack webhook url:
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: ae.k8.slack
              key: webhook
          # set to your Slack OAuth Access Token or Bot User OAuth Access Token
        - name: SLACK_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: ae.k8.slack
              key: access_token
          # set comma separated Slack channels (without '#') to publish plots to
        - name: SLACK_PUBLISH_PLOT_CHANNELS
          valueFrom:
            secretKeyRef:
              name: ae.k8.slack
              key: channels
        # set to "1" to enable publishing to slack when
        # each ticker's job completes
        - name: DATASET_COLLECTION_SLACK_ALERTS
          value: "0"
        # set to "1" to publish Celery task failures to Slack
        - name: PROD_SLACK_ALERTS
          value: "0"
